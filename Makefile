# Make file for the ABC Tool Box:
# Not currantly working, WIP

# See DevManual.txt for details.

# The names of all of the tools.
TOOLLIST= hello-world

# Compiler Varaibles:
CXX=gcc
CXXFLAGS=-Wall -MMD -std=c++11

# Is it possible to link in libraries ahead of time,
# As well as join the partally made objects together?
LINK=ld
LINKFLAGS=-Ur

# Directory names:
# Intermediate objects    (hide later, maybe make it "tmp")
INTDIR=obj
# Completed objects       (hide later)
OBJDIR=obj
# Completed libraries
LIBDIR=include
# Code Directory
CODEDIR=code

# Special Rules:
.PHONY : all clean
.SECONDEXPANSION :



# Functions:
# If given a turns the names of tools it is given to the names of the tools
# final files.
endfiles= $(foreach tool,$(1),$(LIBDIR)/$(tool).hpp $(LIBDIR)/lib$(tool).a)
toollib = $(LIBDIR)/lib$(1).a
toolhead= $(LIBDIR)/$(1).hpp



### Rules:

# Default rule, updates all tools.
all : $(TOOLLIST)

# Tool level rule, create all final files for a tool.
$(TOOLLIST) : $$(LIBDIR)/$$@.hpp $$(LIBDIR)/lib$$@.a

# Put the finished items into the include directory.
#$(TOOLLIST) : $(OBJDIR)/$$(notdir $$@).o $(CODEDIR)/$$@.hpp | $(LIBDIR)
#	ar rcs $(LIBDIR)/lib$@.a $(OBJDIR)/$(notdir $@).o
#	cp $(CODEDIR)/$@.hpp $(LIBDIR)/$(notdir $@).hpp

# Create the library in the include directory
$(LIBDIR)/lib%.a : $(OBJDIR)/%.o | $(LIBDIR)
	ar rcs $@ $<

# Copy the public header over.
$(LIBDIR)/%.hpp : $(CODEDIR)/%.hpp | $(LIBDIR)
	cp $< $@

# Rule for final objects
# (objects generated by linking and are used to create libraries)
$(OBJDIR)/%.o :
#	$(LINK) $(LINKFLAGS) $^ $(object_LIB) -o $@

# Rule for intermediate objects:
# (all objects generated directly from code files)
$(ALL_OBJ) : $(patsubst $(TMPDIR)/%.o,$(CODEDIR)/%.cpp,$@) | $(TMPDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Directory creation. Only INTDIR should ever have to be made.
$(INTDIR) $(OBJDIR) $(CODEDIR) $(LIBDIR) :
	mkdir $@



# Add dependancy files.
-include $(dependancy)

# clean phony rule.
clean :
