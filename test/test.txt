Rough notes for my testing harness.

I would like to make it a bash script but that might not be possible...
for me at least, with everthing I want to do. The main issue is I can't figure
out how to read a line, process it, then read the next line.
Best solution I have found so far is sed -n '#p' [<] file-name.txt. But that
still seems ackward.

So I might make a small c/c++ and stick the compiling command in with the
order-only-dependances in the make file.

Things the harness has to do:
* Run tests on a given program.
  * Auto tests where the input and output is taken from a file.
  * Interactive tests where the user tries it. (Both some instructions
    and an opertunity to skip the test should be given.)
* Store the results
  * A diff-like file for auto tests.
  * A text editor might have to be used for the interactive tests.

Beyond that the make file should be abile to figure out what tests need to be
run (time stamps on the tests, programs and results file). Then again we might
need some equivlant of the -MMD flag to write out all the dependances for what
tests what.

So a program will have a series of tests.
.../<program>:
<test>.tst: Main test file, select an automatic/manual test, the command line
  call to start the program and the expected exit code.
<test>.in: Input for autormatic tests.
<test>.out: Expected output for the automatic test.
<test>.pr: Prompt for manual bests (instructions on what to test).
<test>.res: Results, both auto and manual, first line has the passed/fail
  result and the rest is a diff of the .out and actual output for automatic
  test and the testers nodes for manual tests.
