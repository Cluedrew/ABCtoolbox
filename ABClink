#! /bin/bash
# Creates a link to the currant directory for easy access.

# The default link: Also the global link because all users can reach it.
# Doesn't actually work like that right now.
DEFAULTLINK="/usr/local/include"

# Print the usage.
function usage ()
{
  echo "Usage: $0 ([directory]| -h)"
}

# Append together up to five peramiters without whitespace and echo the result.
function append ()
{
  echo $1$2$3$4$5
  exit 0
}

# Create a link from the directory in $1 to the include directory.
function makelink ()
{
  # Calculate the position/name of the link.
  LINKNAME=$1
  # If the path is relative, recalculate as an absolute path.
  if [ "0" == $(echo $1 | grep -c "^/") ]; then
    LINKNAME=$(pwd)/$1
  fi
  # Before going any further append the base name of the link.
  if [ "0" == $(echo $1 | grep -c "/$") ]; then
    LINKNAME=$LINKNAME/ABC
  else
    LINKNAME=$(append $LINKNAME ABC)
  fi

  # Get the directory of the ABCtoolbox, i.e. the one that contains this file.
  HEREPATH="$(cd "$(dirname "$0" )" && pwd)"
  # Create a path to the include directory (containing .hpp and .o files).
  INCLUDE=$HEREPATH/include

  # Create the link.
  if ln --symbolic -T $INCLUDE $LINKNAME; then
    # Tell the user what just happened.
    echo "Link to the ABC Tool Box made:" $LINKNAME
  else
    echo "Error Occured: Link not made"
  fi
}

# Show the help information for the script
function showhelp ()
{
  usage
  echo "
ABClink is a tool in the ABC Tool Box that makes it easier to access the tool
box for coding. It creates a link to a directory that contains all of the
headers for include directives as well as object files that are linked into
code that uses the tool box.

...Rest will come when the link script is working."
}

echo "Still in beta"
# The name doesn't simpliy quite right and I need to finish the help.

# Check for good input.
if [ $# -gt 2 ]; then
  usage
  exit 1

# No peramiter: Standard usage:
elif [ "$1" ==  ""  ]; then
  makelink $DEFAULTLINK

# -h option: Help usage:
elif [ "$1" == "-h" ]; then
  showhelp

# Check for a proper directory.
elif [ ! -d $1 ]; then
  echo $1 is not a directory.
  exit 2

# Create a link in the directory.
else
  makelink $1
fi

### Alt:

# Creates a link from a directory searched by the g++ -l flag (/usr/include ?)
# to where the objects/headers for ABC Tool Box are.
